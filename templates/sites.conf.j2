{% for vhost in nginx_sites %}
server {
    listen {{ vhost.nginx_port | default('80') }};
    listen [::]:{{ vhost.nginx_port | default('80') }};
    server_name {{ vhost.nginx_servername | default('localhost') }};

    #include /etc/nginx/letsencrypt.conf;
    
    location / {
        rewrite     ^(.*)   https://{{ vhost.nginx_vhost }}$1 permanent;
    }
}
{% if vhost.nginx_enable_ssl is defined and true %}
server {    
    listen {{ vhost.nginx_ssl_port | default('443') }} ssl;
    listen [::]:{{ vhost.nginx_ssl_port | default('443') }} ssl;
    server_name {{ vhost.nginx_servername | default('localhost') }};

    # ssl settings
    ssl_certificate      /etc/nginx/ssl/{{ vhost.nginx_ssl_cn }}/cert.pem;
    ssl_certificate_key  /etc/nginx/ssl/{{ vhost.nginx_ssl_cn }}/privkey.key;
    #ssl_trusted_certificate /etc/ssl/certs/byteflare.de/fullchain.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/ssl/dhparam.pem;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    # ssl_stapling on;
    # ssl_stapling_verify on;

    resolver 8.8.4.4 8.8.8.8 valid=300s;
    resolver_timeout 10s;

    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "SAMEORIGIN";

    #include /etc/nginx/letsencrypt.conf;
    
    root   {{ nginx_doc_root }}/{{ vhost.nginx_vhost }}/app/web;

    location / {
        root   {{ nginx_doc_root }}/{{ vhost.nginx_vhost }}/app/web;
        index  index.html index.htm index.php;
        try_files $uri $uri/ /index.php;
    }


    {% if vhost.nginx_enable_caching is defined and true %}
        

    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        expires {{ vhost.nginx_expiration_time }};
    }   
    {% endif %}


    {% if vhost.nginx_error_page is defined %}

    error_page {{ vhost.nginx_error_page }};
    {% else %}

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    {% endif %}
    {% if vhost.nginx_access_log is defined %}

    access_log {{ vhost.nginx_access_log }}/{{ vhost.nginx_vhost }}/access.log;
    {% endif %}
    {% if vhost.nginx_error_log is defined %}

    error_log {{ vhost.nginx_error_log }}/{{ vhost.nginx_vhost }}/error.log error;
    {% endif %}

    location ~ \.php$ {
        root   {{ nginx_doc_root }}/{{ vhost.nginx_vhost }}/app/web;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/fpm-{{ vhost.nginx_vhost }}.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME  /app/web$fastcgi_script_name;
    }
    
}
{% endif %}
{% endfor %}